package main

templ Index() {
	<style>
    #colorBar {
      display: flex;
      justify-content: space-around;
      padding: 10px;
      background-color: lightgray;
    }
    .colorButton {
      width: 40px;
      height: 40px;
      border: 1px solid black;
      cursor: pointer;
    }
  </style>
	<div id="colorBar"></div>
	<canvas id="myCanvas" width="1000" height="1000" style="border-radius: 2px; border-color: black;padding: 10px;border-style: dashed;"></canvas>
	<script>
    

const colors = ["red", "blue", "green", "yellow", "orange", "purple", "black", "pink"];
    const colorBar = document.getElementById("colorBar");
    const canvas = document.getElementById("myCanvas");
    const ctx = canvas.getContext("2d");

    // Initialize default strokeStyle
    ctx.strokeStyle = "black";

    // Create color buttons dynamically
    colors.forEach(color => {
      const button = document.createElement("div");
      button.classList.add("colorButton");
      button.style.backgroundColor = color;
      button.addEventListener("click", () => {
        ctx.strokeStyle = color; // Update canvas strokeStyle
        console.log(`Stroke style changed to ${color}`);
      });
      colorBar.appendChild(button);
    });
 
let coord = {x:0 , y:0};  


let paint = false; 
    
function getPosition(event){ 
    coord.x = event.clientX - canvas.offsetLeft; 
    coord.y = event.clientY - canvas.offsetTop; 
} 
    

function startPainting(event){ 
    paint = true; 
    getPosition(event); 
} 
function stopPainting(){ 
    paint = false; 
} 
    
function sketch(event){ 
    if (!paint) return; 
    ctx.beginPath(); 
    ctx.lineWidth = 2; 
    ctx.lineCap = 'round'; 
    ctx.moveTo(coord.x, coord.y);
    getPosition(event); 
    ctx.lineTo(coord.x , coord.y); 
    ctx.stroke(); 
}



                    

window.addEventListener('load', async ()=>{ 
    document.addEventListener('mousedown', startPainting); 
    document.addEventListener('mouseup', stopPainting); 
    document.addEventListener('mousemove', sketch); 
}); 


    </script>
}
