// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.833
package main

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func Index() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<canvas id=\"myCanvas\" width=\"1000\" height=\"1000\" style=\"border-radius: 2px; border-color: black;padding: 10px;border-style: dashed;\"></canvas><script>\r\n    \r\n\r\n\r\n\r\nconst c = document.getElementById(\"myCanvas\");\r\nconst ctx = c.getContext(\"2d\");\r\nlet coord = {x:0 , y:0};  \r\n\r\n\r\nlet paint = false; \r\n    \r\nfunction getPosition(event){ \r\n    coord.x = event.clientX - c.offsetLeft; \r\n    coord.y = event.clientY - c.offsetTop; \r\n} \r\n    \r\n\r\nfunction startPainting(event){ \r\n    paint = true; \r\n    getPosition(event); \r\n} \r\nfunction stopPainting(){ \r\n    paint = false; \r\n} \r\n    \r\nfunction sketch(event){ \r\n    if (!paint) return; \r\n    ctx.beginPath(); \r\n    ctx.lineWidth = 2; \r\n    ctx.lineCap = 'round'; \r\n    ctx.strokeStyle = 'green'; \r\n    ctx.moveTo(coord.x, coord.y);\r\n    getPosition(event); \r\n    ctx.lineTo(coord.x , coord.y); \r\n    ctx.stroke(); \r\n}\r\n\r\n\r\n\r\n                    \r\n\r\nwindow.addEventListener('load', async ()=>{ \r\n    document.addEventListener('mousedown', startPainting); \r\n    document.addEventListener('mouseup', stopPainting); \r\n    document.addEventListener('mousemove', sketch); \r\n}); \r\n\r\n\r\n    </script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
